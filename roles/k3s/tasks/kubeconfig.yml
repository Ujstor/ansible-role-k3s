---
- name: Create directory .kube
  ansible.builtin.file:
    path: ~{{ ansible_user }}/.kube
    state: directory
    mode: "0700"
    owner: "{{ ansible_user }}"

- name: Check if kubeconfig already exists
  ansible.builtin.stat:
    path: ~/.kube/config-{{ k3s_kubeconfig_target }}
  register: kubeconfig_target
  delegate_to: localhost

- name: Copy k3s kubeconfig file to user home directory
  ansible.builtin.copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: ~{{ ansible_user }}/.kube/config-{{ k3s_kubeconfig_target }}
    remote_src: true
    owner: "{{ ansible_user }}"
    mode: "0600"
  when: not kubeconfig_target.stat.exists

- name: Replace server
  ansible.builtin.command: >-
    k3s kubectl config set-cluster default --server=https://{{ k3s_kubeconfig_server }}
      --kubeconfig ~{{ ansible_user }}/.kube/config-{{ k3s_kubeconfig_target }}
  changed_when: false
  when: not kubeconfig_target.stat.exists

- name: Replace context
  ansible.builtin.command: >-
    k3s kubectl config rename-context default {{ k3s_kubeconfig_context }}
      --kubeconfig ~{{ ansible_user }}/.kube/config-{{ k3s_kubeconfig_target }}
  changed_when: false
  when: not kubeconfig_target.stat.exists

- name: Download kubeconfig to local machine
  ansible.builtin.fetch:
    src: ~{{ ansible_user }}/.kube/config-{{ k3s_kubeconfig_target }}
    dest: ~/.kube/config-{{ k3s_kubeconfig_target }}
    flat: true
  when: not kubeconfig_target.stat.exists
